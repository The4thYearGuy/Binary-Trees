class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> ans =  new ArrayList<>();
        result(root , ans , 0);
        return ans;
    }                                                                                               //FOR RIGHT VIEW TREE
    void result(TreeNode node , List<Integer> ans , int currDepth){
        if(node == null)
            return;
        
        if(currDepth == ans.size()) ans.add(node.val);
        result(node.right , ans , currDepth+1);
        result(node.left ,  ans , currDepth+1);
    }
}

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> ans =  new ArrayList<>();
        result(root , ans , 0);
        return ans;                                                                       //FOR LEFT VIEW TREE
    }
    void result(TreeNode node , List<Integer> ans , int currDepth){
        if(node == null)
            return;
        
        if(currDepth == ans.size()) ans.add(node.val);
         result(node.left ,  ans , currDepth+1);
        result(node.right , ans , currDepth+1);
       
    }
}
