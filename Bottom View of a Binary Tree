import java.util.*;
class Pair{
    BinaryTreeNode node;
    int line;
    
    Pair(BinaryTreeNode _node , int _line){
        node = _node;
        line = _line;
    }
}

public class Solution {
    public static ArrayList<Integer> bottomView(BinaryTreeNode root) {
        ArrayList<Integer> ans = new ArrayList<>();
        if(root == null) return ans;
        Queue<Pair> q = new LinkedList<>();
        Map<Integer,  Integer> map =  new TreeMap<>();
        q.offer(new Pair(root , 0));
        while(!q.isEmpty()){
            Pair it = q.remove();
            int line =  it.line;
            BinaryTreeNode node = it.node;
            map.put(line, node.val);
            if(node.left != null){
                q.offer(new Pair(node.left , line - 1));
            }
            if(node.right != null){
                q.offer(new Pair(node.right , line + 1));
            }
        }
        for(Map.Entry<Integer , Integer> entry : map.entrySet())
            ans.add(entry.getValue());
        
        return ans;
    }
}
