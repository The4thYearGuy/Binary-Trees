import java.util.*;
class Pair{
    BinaryTreeNode node;
    int hd;
    public Pair(BinaryTreeNode _node , int _hd){
        node = _node;
        hd = _hd;
    }
}

public class Solution {
	public static ArrayList<Integer> getTopView(BinaryTreeNode root) {
        ArrayList<Integer> ans =  new ArrayList<>();
        if(root == null) return ans;
        Map<Integer ,  Integer> map =  new TreeMap<>();
        Queue<Pair> q = new LinkedList<>();
        q.add(new Pair(root , 0));
        while(!q.isEmpty()){                                                            //will only display the boundary elements from the top view
            Pair it = q.remove();
            int hd = it.hd;
            BinaryTreeNode node = it.node;
            if(map.get(hd) == null) map.put(hd, node.val);
            if(node.left != null)
                q.add(new Pair(node.left , hd - 1));
            if(node.right != null)
                q.add(new Pair(node.right , hd + 1));
        }
        
        for(Map.Entry<Integer , Integer> entry : map.entrySet()){
            ans.add(entry.getValue());
        }
        return ans;
	}
}
